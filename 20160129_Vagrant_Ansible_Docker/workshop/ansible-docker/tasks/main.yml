---

- name: Install (or update) docker.io
  apt:
    name: docker.io
    state: latest
    update_cache: yes
  when: "ansible_distribution_version == '14.04'"

- name: Link docker binaries
  file:
    src: /usr/bin/docker.io
    dest: /usr/local/bin/docker
    owner: root
    group: root
    state: link
  when: "ansible_distribution_version == '14.04'"

- name: Check if docker installed
  command: /usr/bin/test -e /etc/default/docker
  register: docker_installed

- name: Install required packages
  apt:
    name: '{{ item }}'
    state: 'present'
    install_recommends: False
  with_flattened:    
    - '{{ "docker-engine" if docker_upstream|d() else "docker.io" }}'
    - docker_base_packages
    - docker_packages

- name: Check Docker version
  environment:
    LC_MESSAGES: 'C'
  shell: dpkg-query -W -f='${Version}\n' '{{ ("docker-engine" if docker_upstream|d() else "docker.io") }}' | cut -d- -f1
  register: docker_register_version
  changed_when: False
  failed_when: False
  tags: [ 'role::docker:config' ]

- name: Configure Docker options
  template:
    src: 'etc/default/docker.j2'
    dest: '/etc/default/docker'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart docker' ]
  tags: [ 'role::docker:config' ]

- name: Make sure that systemd directory exists
  file:
    path: '/etc/systemd/system'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: '0755'
  when: docker_upstream|d() | bool
  tags: [ 'role::docker:config' ]

- name: Install Debian systemd service unit
  template:
    src: 'etc/systemd/system/docker.service.j2'
    dest: '/etc/systemd/system/docker.service'
    owner: 'root'
    group: 'root'
    mode: '0644'
  notify: [ 'Restart docker' ]
  register: docker_register_systemd_service
  when: docker_upstream|d() | bool
  tags: [ 'role::docker:config' ]

- name: Reload systemd daemons
  command: systemctl daemon-reload
  when: ((ansible_local|d() and ansible_local.init|d() and
          ansible_local.init == 'systemd') and
         docker_register_systemd_service|d() and
         docker_register_systemd_service.changed)
  tags: [ 'role::docker:config' ]

- name: Add specified users to 'docker' group
  user:
    name: '{{ item }}'
    groups: 'docker'
    append: True
  with_items: docker_admins
  when: item|d()
  tags: [ 'role::docker:config', 'role::docker:admins' ]

